import Head from "next/head";
import styles from "./index.module.sass";
import { useEffect, useState } from "react";
import axios from "@/utils/axios.config";

interface TaskData {
  id: string;
  task: string;
}

export default function Home() {
  const [task, setTask] = useState<string>("");
  const [taskData, setTaskData] = useState<TaskData[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const [edit, setEdit] = useState<boolean>(true);
  const [number, setNumber] = useState<string>("");
  const [editString, setEditString] = useState<string>("");

  useEffect(() => {
    axios
      .get("/todo")
      .then((res) => {
        setTaskData(res?.data.reverse());
        setLoading(false);
      })
      .catch((e) => console.log(e));
  }, []);

  const onFinish = async () => {
    try {
      await axios.post("/todo", {
        task,
      });
      window.location.reload();
    } catch (e) {
      console.log(e);
    }
    setTask("");
  };

  const editTask = async (id: string) => {
    setEdit((prevEdit) => !prevEdit);
    setNumber(edit ? id : "");

    if (!edit) {
      try {
        await axios.put(`/todo/${id}`, {
          task: editString,
        });
        window.location.reload();
        alert("Changed successfully");
      } catch (e) {
        console.log(e);
      }
    }
  };

  const deleteTask = async (id: string) => {
    try {
      await axios.delete(`/todo/${id}`);
      alert("Deleted successfully");
      window.location.reload();
    } catch (e) {
      console.log(e);
    }
  };

  return (
    <>
      <Head>
        <title>{"Next Todo"}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.todo}>
        <div className={styles.todo__input}>
          <input
            type="text"
            placeholder="Tasks..."
            value={task}
            onChange={(e) => setTask(e.target.value)}
          />
          <button onClick={onFinish} disabled={task === ""}>
            Save
          </button>
        </div>

        {loading ? (
          <div className={styles.loading}>Loading...</div>
        ) : (
          <div className={styles.todo__tasks}>
            {taskData?.map((item: TaskData, index: number) => {
              return (
                <div key={index} className={styles.task}>
                  <input
                    type="text"
                    defaultValue={item.task}
                    readOnly={number !== item.id}
                    onChange={(e) => setEditString(e.target.value)}
                    style={{
                      border: number === item.id ? "1px solid #333" : "none",
                    }}
                  />
                  <div className={styles.action}>
                    <button onClick={() => editTask(item.id)}>
                      {number === item.id ? "Save" : "Edit"}
                    </button>
                    <button onClick={() => deleteTask(item.id)}>Delete</button>
                  </div>
                </div>
              );
            })}
          </div>
        )}
      </main>
    </>
  );
}
